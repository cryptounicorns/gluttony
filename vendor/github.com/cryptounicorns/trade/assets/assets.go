// Code generated by go-bindata.
// sources:
// markets/market/bitfinex/currencies.json
// currencies/currencies.json
// DO NOT EDIT!

package assets

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _marketsMarketBitfinexCurrenciesJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xd3\x4f\x4b\x33\x31\x10\x06\xf0\xfb\xfb\x29\x4a\xce\xcd\xa1\x3d\xbe\xb7\xda\x5d\x54\xb0\x5d\xed\xae\x52\x14\x0f\xd3\xcd\xd0\x06\xf2\xa7\x26\xd3\x82\x4a\xbf\xbb\x28\x82\xe4\xd9\xbd\x2e\xbf\x64\x86\xe7\xd9\xbc\x7c\xaa\x40\x9e\xd5\xff\x89\xa2\x33\x07\x39\x65\x35\x9d\xa8\xfc\xee\x77\xd1\x7d\x7f\x5c\x3c\x75\xea\x32\x9d\xfc\xa9\x9d\x95\x3e\xda\x50\xaa\xab\x6e\x39\xaa\x74\x4f\xf9\x00\x74\x79\x33\x4e\xf7\xd1\x19\xbc\xf5\x1a\xa8\xcc\x74\x9f\x05\xd5\x0c\xd5\x7c\x4c\xcd\x4b\x65\x06\x9b\x55\x2d\x6c\xc6\xd6\xc4\x58\x9a\xba\x6a\xc0\x44\x08\xac\x6e\x5a\x10\x72\xe0\xc4\x27\x0f\xac\xc3\x61\xbf\x4c\xf7\x8e\x72\xb6\x3d\x72\x08\xd8\x46\xa1\x92\xdc\x36\xd0\x94\xb3\xc2\xc3\xaa\xee\xf0\x26\xcf\x42\x67\x4e\x99\x71\xe2\x3d\xb8\x18\x38\x41\x1c\xdb\xd5\xa6\x44\x81\x41\xac\x6b\x08\x2c\x7a\x9b\x79\x0f\xaa\x59\x41\xd3\x6f\x82\x81\x3d\x74\xab\x92\x24\x7b\x3c\x3a\x58\x7a\xbb\x81\xa5\x33\x05\xb1\x9e\x03\xfc\x0d\xed\x62\x0d\x4e\x12\x93\x4f\xda\x90\xd0\x30\xb3\x6a\x01\xd1\xca\x4f\x5b\x25\x7a\x6c\x2b\x50\xa7\x60\x85\x8d\xce\x42\xc2\x59\x9b\xe8\x1c\x0d\xcf\x94\x47\x3e\x86\x0f\xe6\xb9\x5e\xaa\xcb\xeb\xbf\xaf\x00\x00\x00\xff\xff\x2d\xb8\x42\xca\xa9\x03\x00\x00")

func marketsMarketBitfinexCurrenciesJsonBytes() ([]byte, error) {
	return bindataRead(
		_marketsMarketBitfinexCurrenciesJson,
		"markets/market/bitfinex/currencies.json",
	)
}

func marketsMarketBitfinexCurrenciesJson() (*asset, error) {
	bytes, err := marketsMarketBitfinexCurrenciesJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "markets/market/bitfinex/currencies.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _currenciesCurrenciesJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x9c\x4b\x6f\xe3\x3a\x9a\xf7\xf7\xef\xa7\x68\xd4\xba\x05\xf4\xa9\xc6\x0b\x1c\xcc\xce\x17\xc5\xd6\x89\x2c\xb9\x24\xd9\x71\x32\x98\x05\x25\xd1\x32\xcb\x14\xa9\xe2\xc5\xb1\x33\x98\xef\x3e\xb0\x73\xaa\x1b\xf5\x7f\x9e\x83\x59\x05\x01\x7e\xe6\x9d\xcf\x9d\xfa\xcf\xff\xfe\x62\xc4\x28\xbf\xfc\xc7\xdf\xbe\xfc\xe3\xfa\xe5\xef\x7f\xfb\xe2\x6f\x63\x6b\xf5\xfd\xff\xb7\xea\xf0\xe5\x7f\xfe\xfe\xb7\x7f\x03\x5f\x07\x75\x91\xbf\x32\x5f\x57\xd9\x3e\xfd\x95\xfa\xfd\x1f\xbf\x77\x56\x99\x5f\xb9\xdf\xff\xf1\xfb\xaf\x94\xe8\x4e\x02\xa1\xd9\xa2\x01\xa8\x0f\xf6\x2c\x91\x5a\x12\xea\x9a\x18\x19\x90\x82\xc1\x0b\x69\xb1\xa1\xb4\x2c\x90\x71\x04\xaa\x08\x13\xa4\x33\x2a\xdc\xb0\x31\xc0\x06\xeb\x84\x4f\x1e\xe3\xf7\x80\xae\xaa\x1a\x61\x27\xb5\xb6\x49\x2f\x75\x10\xbf\xc2\xcb\x1c\x67\xab\xc8\x10\x33\x32\x0f\xe5\xfc\xbb\x98\x00\xab\x49\x4b\x8e\x5b\xde\xac\x02\xec\x1c\x6f\x22\xa1\x5b\x3a\x7b\x7e\x05\x50\x2b\x9c\x69\x9e\xe1\x4c\xf5\x24\x98\xa6\xb6\x0b\xc4\x42\x67\xc7\x31\xde\xd7\x99\xeb\x3a\x6f\x16\xe5\x06\x7e\x32\xb6\xd2\x01\xb6\x99\x03\x33\x4d\x5a\xb6\xb7\x00\x87\x78\x36\xc7\x99\x4c\x57\x1c\x20\x9e\x26\x27\x06\xb2\x0f\x05\x2e\xb0\xeb\x82\xea\x98\xe1\x57\x38\x5d\xd7\x5b\x1c\x7b\xb5\xc4\x7d\x70\x67\x44\x9e\x81\xf0\xdd\xe9\x57\xe4\x30\xc3\xf5\x0f\x2d\x33\x9e\x06\xd7\x29\x74\xdc\xaa\x37\x0b\x1c\x77\xd0\xc2\xe0\xc5\x6b\x72\x84\x82\x34\x41\x59\xf3\x79\x19\x12\x7b\x4c\x46\xd9\x2b\x81\x3f\xc3\xfd\x8c\xbd\xb2\xcc\x20\x96\x38\x86\x38\x44\x58\xbb\x2a\xdd\x22\xe3\x64\xc4\xb3\xb9\x23\xb7\x30\x3a\xeb\xb8\xd3\xb9\xc3\x9d\x88\xe1\x64\x9d\x3f\x29\xbc\x61\x0d\x69\x31\x58\xa3\xec\xaf\x54\x91\x95\x40\x5d\xa4\x09\x64\x78\x7b\x38\x4c\xed\x3f\xe9\xc8\xe6\xff\x04\x46\x98\x0e\x0f\xd2\x1c\x4f\x65\x2b\xbc\xea\x12\xd8\x15\xf8\xcd\x0c\x7f\xd3\xa1\x34\x99\x2f\x66\xb0\xc8\xad\xd4\xcc\xe2\xcd\xd3\x7c\x06\x9c\xd2\x5a\x59\x23\x94\x93\x5c\xdf\x87\x79\x8e\xbc\x11\xa6\x93\xcc\x81\x9c\x17\x73\x44\xfd\x18\x03\xdc\x81\x39\xca\xa0\x56\x85\x56\x78\x90\x01\xf3\x66\xbe\x60\xb0\x1b\x2e\xcc\x2b\x85\xa4\xc0\x71\x65\x78\xa1\xee\x58\xe8\x28\xd5\xd0\x3e\x3b\x6d\x63\x8f\x63\x43\x65\x76\xe7\x0c\x8e\x2d\x6b\x16\x05\x1d\x1e\xb3\x6c\x5c\xaf\x56\x99\xa4\x13\x1e\xd7\x6e\xb1\xe6\xd1\xc1\x6a\x32\xc8\x15\x8f\x4e\x1a\xcf\xf6\x81\x59\xea\x07\xea\x24\x69\x74\x51\xa5\x4b\x1e\xf6\x4a\x5f\x50\xe2\xcf\x9b\x05\xdd\xec\x3b\xdd\x13\xe9\x39\x6f\x16\x7c\xc3\x1f\x84\x7b\x63\x38\x63\x64\x17\x70\xb1\xb8\x69\x39\x72\xd0\x98\xbd\x74\x37\x1f\x84\xf6\xd8\x1e\xdd\xcd\x5e\x0a\x0d\xd4\x92\xdc\x97\xd0\xab\x0e\x7a\x5d\xd4\x45\x49\xb0\x91\x59\x94\x0d\xa1\x7e\x44\x69\xb0\xb9\xf9\x37\x3a\x89\x1f\x78\x1e\xbf\x11\xc4\x4b\x83\x1b\x5c\xd3\x4d\xf0\x27\xe1\x24\xae\x05\x8a\xd6\x3b\xf7\xae\x8e\xb0\x05\xf5\x4b\xf6\x84\xa2\x4b\x85\xe8\xb1\xd7\xac\xd9\x31\x1d\x7f\x48\xbc\x53\x6f\xf4\x42\x5d\xc9\x35\x3e\xe0\xb6\x6b\xd1\x9d\x99\x6b\x97\x3f\x33\xdc\x68\xad\x49\x3a\x77\x9b\x02\xa8\x89\xf9\x86\x36\x7b\x96\x3e\x08\x3c\xf2\x39\xea\xf8\x56\xab\xf0\xc1\xdc\xe5\x3c\x6b\xf0\x24\x6b\xdb\x9d\x3b\x01\x8b\xb8\x20\xd2\xff\x8e\x8d\xc2\xa3\xc1\x33\x5f\x6c\x39\x92\xd8\xe2\xf3\xbc\x5c\x90\xb9\xdb\xee\x1c\x14\x98\x59\x4d\x86\xc7\xca\x7a\x66\x21\x4b\x9c\xb0\x93\xe2\x6c\x23\xf6\x8a\xe6\xd1\x4f\x2c\xf1\x41\x9c\xf1\x40\xa3\xaf\xd3\x3a\xc5\x69\xb3\x2a\x43\x6d\xe6\x54\x3f\x48\x86\x5c\xe0\x7d\x0b\xbf\x25\x9d\xc7\x31\x36\xbf\x21\xf5\x95\xa3\xbe\x02\x15\x1d\x61\x76\x15\xda\xf7\x6d\xfc\xf8\x60\x06\xb6\x7b\xc3\x53\x70\x0b\xb2\x15\x1a\xe4\xca\x6a\xfe\xda\xa4\x14\xec\x24\x1a\x7c\xf3\x57\x3c\xa8\x77\xec\x2e\xa1\xdb\x8e\x2c\x4a\x41\x50\x3b\xfe\x1f\x22\xa8\x13\xe3\x14\x99\x63\xb0\xd8\x6c\x71\x8d\x3b\x61\x44\xaf\x84\x49\x7a\xab\x35\x5e\x94\xc5\x6c\x49\x68\x23\x5a\xc5\x35\x3d\x2b\x0a\x86\x0d\xc4\xf5\x5a\x14\xc5\x02\xc1\xc9\x29\xa6\x45\xf4\x70\x3a\xe1\x7a\x61\x2c\x1a\xb7\x33\x42\x05\x71\x55\x9c\x9d\xb4\x40\x3d\x72\xdf\x19\x27\x10\xaa\x28\x14\x1d\x33\x0f\x38\x3b\x0f\xef\x9c\x99\xc6\x1a\xa7\x71\xe7\xb4\x32\xa0\x47\xf2\xac\x78\x26\xa0\x19\x50\x29\xcd\x56\x08\x29\x23\x92\x1b\xda\x53\xc4\xac\xe9\x4e\x6a\xf2\x38\xb2\x6c\x5b\x23\xe5\xac\xb1\xad\xc0\xc1\x35\xd9\x26\xe5\x48\x6d\x07\x05\xc2\x7d\x89\xf6\x5e\xa7\x4c\xaf\x3a\x11\xd0\xca\x5e\x14\x78\xb8\x94\xeb\xa2\x0a\xfe\xee\xee\x5c\x84\x8e\x38\xf5\x72\x3f\xcb\xf1\x17\x17\xec\x7e\xb1\xc7\xe5\xd6\x62\xc4\x89\xe7\x33\xbc\x30\x5a\x0a\x37\x59\xbc\xd0\xdb\x32\xc7\x1e\xb5\x15\x8c\xa2\x5a\xe4\xe5\x0c\x77\x4f\x47\xc6\x6f\x5c\xe4\x3b\xb0\x73\x3b\xdb\x2a\x73\xb2\xb6\xc7\xd9\x12\xee\x68\xa3\xe9\x13\x85\xaa\xe7\x29\x43\xf0\x6e\xbb\xa1\x2a\x5b\x60\x08\xa8\xb3\xda\x7a\xff\x29\x25\xae\xd8\x66\x99\xe3\x4d\xb1\xa6\x97\xc6\x0b\x8c\x03\x54\xb3\x0c\xaf\xbd\x35\x47\xd5\x5b\x1c\x24\xee\xb5\x65\x6e\x54\x89\x37\xcf\x7a\xdc\xb9\xb2\xc6\x13\x6b\xa3\x09\xd2\x4d\xc2\x61\x78\xe9\xb0\x00\x6f\xab\x73\x52\x04\x75\x61\x34\xcf\xa2\x4a\x51\x8a\x38\xd9\x4b\xde\x85\x5a\x54\x4b\x22\xc1\x9c\xec\x55\x68\xc9\xd6\x54\xb8\x87\x4e\x92\x95\xa9\xd2\x25\x8a\x64\x67\xdf\x49\x9f\x2f\xc8\xdc\xcd\x9f\x4e\xb8\x96\xac\x22\xd3\xeb\x9d\xfd\x2e\xba\x33\xae\xe6\x1f\x1c\x68\xe4\x15\x2f\x2a\x1e\x86\xe8\xb8\x45\xdc\x55\x28\x23\x6e\x6d\xe7\x65\x87\xdb\x82\x3b\x78\xeb\xd1\x27\x59\xbc\x2e\x53\x38\x0b\xbd\xd0\x4c\x9f\xcb\x59\xbe\x40\xce\xde\x9d\x32\x85\x7a\x62\x9e\x36\x08\xe2\x15\x59\xce\xea\x35\x32\x41\xdc\xad\x66\xe0\xd0\x55\xed\x19\x15\xbf\xc4\xc0\xec\x27\xe4\x84\x16\x68\xd0\x6f\x66\xc5\x8c\xb0\xc4\xaf\x5b\x2e\x70\x45\xa4\x9c\xac\x21\xb7\xa8\x2c\x48\x6c\xb3\x97\x26\x30\x96\xd9\x12\x4d\x8b\x5e\x7a\x85\xbe\xd7\xb2\x26\xdd\x72\x96\xc5\x32\xdd\xc1\xb6\xf6\x4a\x8c\x16\xa7\xba\xdc\x2c\x91\x1a\x14\x8d\x2e\x2e\x57\xb8\xc2\x6a\x50\x41\x68\x63\x91\x3c\x2c\x71\x0e\x9f\xe4\xdd\xa2\xc0\x46\xb7\x94\xbc\xf6\xc2\x62\xd7\x64\x84\x23\x77\xf0\x88\x42\xec\x95\x0f\x4e\x75\x01\x53\x02\x4b\xb4\x13\xfa\xfb\x2c\xe0\x48\x15\x25\x1a\x8e\xbd\xe5\x4c\xe4\x65\xb9\x22\xdc\xe8\x84\x22\x37\x68\x59\x61\xaf\x76\x62\xdb\xdb\x92\xf6\x98\xf0\xc7\xb2\x24\xad\x5d\x22\x22\xfb\x1d\x30\x4e\x1c\xb9\xb6\xd0\xdb\xec\x63\x2b\x1e\xe6\x5f\xd2\xb7\xe8\xdd\x2c\xe7\xe8\xde\xf4\x37\x23\x46\x62\x73\xbc\xc2\x29\xe0\xe4\x76\x8a\xc7\x5d\x26\xbd\x32\xc2\x71\x28\x06\x92\x65\x32\x44\xdd\xa3\x3d\x99\x3e\x81\x75\x20\x5b\x6b\x3d\x33\xe7\x74\x8e\x8e\x86\x6c\x43\x67\xe4\x3b\x62\x18\x66\x92\x1d\x13\xcf\x4d\xd1\x86\x97\xfd\x20\xb5\x44\x5d\x99\x2e\xc1\x54\x94\xaa\xb7\x16\x19\x6c\x4a\x19\x1f\xa4\x32\x2a\x82\x8f\x91\x6e\x16\xe0\x51\x49\x2d\x7c\xc0\x9d\x38\xa4\xb8\x24\x5a\x76\xc1\x59\x23\x49\x83\x0d\x6e\x87\x56\x57\x05\xc7\x38\xcd\x71\xff\xe5\xd8\x4a\x07\x33\xdd\xcc\x31\x2e\x2d\x47\xe9\x98\x85\xc3\xf8\x80\x34\x9f\x2a\x2f\x48\x8d\x83\xc3\xfd\x32\xd2\x0d\x37\xa6\xc9\xa2\xc2\x55\x36\x6a\x18\x45\x32\x39\xfb\x9d\x84\xbb\xd2\x82\xc0\xdf\x95\xe1\x0e\x60\x01\xaa\x59\x5a\xdc\x5d\xf4\xe8\xa5\x0d\x9c\xcf\x93\xe2\xd5\x95\x3f\xa2\x0a\x4e\x10\x89\x91\x7e\x43\x30\x9c\xa4\x63\xb6\x6d\xcd\x63\x49\x4b\x2c\xf6\x79\xbe\x4b\xff\x02\xee\xb4\xf0\x1e\x0f\x4f\x4a\x8e\xff\x4f\x9c\xc6\x22\xd3\x66\xbd\xfc\x0b\x98\x06\x5a\x53\x0c\xb4\xfe\x8b\xd5\x0a\x35\x4a\x9a\x67\x28\x8b\x7f\xd2\x34\x40\x94\x2e\x88\xcd\xf0\x80\x19\x73\xf4\x69\x47\xae\x46\x74\x78\x1d\x31\x6d\x72\x47\x38\xb9\x9d\x62\x3a\x4c\x5e\xa4\x43\xbb\x2d\xdd\xe3\xdd\xb9\x48\x37\x38\x29\x19\x2f\x35\x5d\x31\x0d\x62\x10\x3a\xdd\xe3\xf0\xae\x9f\x3e\x6a\x12\xa9\x1d\x72\xd8\x61\x8b\x7f\xc2\xd8\xf3\x01\xe5\xc0\xb5\xd3\xd1\xb3\x76\x7a\x7a\x58\xe0\x1a\x5e\x27\x61\x30\x31\x91\x1e\x40\xd5\x1f\x45\x47\x82\x26\x4f\x68\xa0\x1d\x85\x62\x64\xc6\x13\x49\xee\x1e\x85\xe6\xb0\x1c\x29\x27\xe0\x14\x3e\x55\x4b\xc2\x0c\x8c\x7c\x7f\xaa\x70\x33\x8e\x52\xdc\x4f\x15\x83\xe2\x8d\x39\x2a\xe7\x43\xab\x89\x3b\xf9\x1b\x2a\xa0\x07\xc8\xf5\x4d\x40\xad\xe0\xea\x3d\xe5\xd9\x33\x32\xd6\x71\xb1\x8f\xa7\x1c\xd4\xcb\xd1\xea\x5e\x99\x81\x23\x31\x49\x79\xb4\x0e\x2d\xb8\x27\x74\x10\x8f\xf1\xbb\x32\x18\x05\x2e\x1a\xec\x34\x9a\xfb\xde\xe2\x75\x2c\x90\xe2\x96\x63\x47\x16\x38\x86\xe8\xe4\x15\x47\x76\x00\x91\x31\x88\x91\xb8\x83\x2b\x8c\x3a\x0c\x62\x94\x9f\xae\xa3\x27\x24\x69\x8f\x20\x20\xff\x07\xc9\x1c\xa5\x55\x0a\x6b\x31\xa8\x41\x24\xef\x22\xb0\xba\xe2\x05\xb5\xde\xa0\x6d\x2b\x74\xd2\x45\xe7\xa4\xe9\x6e\x89\x93\x5e\x3a\xac\x67\x59\xa1\x63\x32\x18\xeb\x95\x4f\x06\x74\xc1\x56\x98\x4f\x19\x2c\xa3\xfa\x0e\xab\xf2\x80\x98\xee\x99\xa9\xe5\x4b\x82\xc9\x31\x31\x32\xbc\x5b\x77\x66\xab\x48\x56\x68\x8a\x0f\x56\xa3\x5e\x5d\x95\x39\x6a\xd6\x07\xc5\x68\x95\xd5\x1c\xb4\xca\xe0\x14\x22\x55\x86\xa3\x74\x8a\x9b\x0c\xca\xf3\xc1\x59\xe9\x03\x23\x68\x48\x21\x0c\x67\x98\x16\x39\x8e\x2c\xea\x23\x6d\x6b\x83\x72\x66\x88\xd3\x04\x6a\x6b\xb5\x03\x59\x3a\x5c\xb9\x64\xd3\xea\x00\xc3\x3a\x89\x69\x62\xec\xa5\x35\x06\x75\x4f\xc2\x8d\xd6\x3c\xc8\xe4\x34\x82\x41\xb0\x46\x83\xed\x74\x37\x75\x81\x41\x33\xf7\x24\xb5\x96\x86\x2b\x22\x59\x63\xdc\xe6\x24\xc7\x89\x62\x0d\x46\x6c\x4f\x4c\x74\xfa\xb0\xce\x10\x1a\x4e\xc9\x40\x0a\xb4\xd6\xd9\x6a\x8d\x20\xde\xa0\xf5\x1e\x64\xd1\xe9\xb1\xc4\x00\xa1\x23\x7e\x0a\x23\x73\x3e\xd6\xcd\x26\xff\xff\x00\xc6\x51\x18\xf5\x03\x97\xf6\x1b\x52\x26\x70\x2a\x66\x8d\x7a\xfc\x14\xd1\x0a\x5a\xef\xd0\x08\x52\x24\x75\x9f\x11\xdf\x46\x75\x68\x32\x64\x8b\x03\x45\xec\xa8\x90\x2a\x08\xe5\x11\xc1\x3b\xac\x0c\x0d\xd1\x64\x05\x89\xe1\x2b\xd3\x5b\xe7\xd9\x22\x8b\x0c\xc3\xd5\xca\x1c\xd5\xa3\xd8\x4a\x7e\x8e\xb2\xc3\x94\x3d\x46\x46\x95\x39\xea\x78\xa5\x2b\x9c\x15\x4f\x38\xef\xfb\x56\x18\x19\x12\x7b\x4c\x26\x69\x27\x0d\x67\x21\x2b\xb7\xdc\x0f\x30\x8c\x9b\x15\x07\x32\xbf\x8b\xf4\xe1\x28\x31\xb8\x44\x52\xc0\x5c\x1d\x51\x56\xe2\x0e\x92\x0d\xc4\xc8\x93\xb2\x58\x9c\xb7\xc9\xca\x06\xa2\x5d\xea\xaa\xef\xd7\x1a\x14\x74\x86\x63\xff\x2e\x26\x61\xa4\x97\xc9\x0d\xb7\xe6\x8f\x2d\xa4\x1c\xce\xc2\xb5\xf6\x5d\x18\x8c\x3d\x3e\x63\x68\xf4\xac\xba\xb3\xea\x40\x4f\x3d\x67\x98\x7a\x3d\xe3\x52\x3c\xe3\xde\x9e\xad\x26\xab\xf1\x9c\x13\x68\xb4\x18\xff\x7d\xc6\x88\xd8\xd9\x72\xc1\xd5\xe7\x12\x83\xab\xe7\xc8\x50\x18\x5b\x3d\xdf\x5a\xe9\x7e\xea\x44\x60\x51\x18\x6a\x31\x4e\x18\x7f\xd9\xa2\xfb\xad\x05\x73\x35\xb0\x5c\x49\x8b\x0f\xe1\xb8\x28\x61\x3e\x83\x3c\xaa\x96\x83\x34\xbd\x4f\x9c\x45\xf3\x3c\xc7\x38\x9c\xe6\xec\x9b\x1c\xed\x1b\xad\x5a\x27\xdc\x2d\xf9\x34\xab\x00\xc6\x1a\x1a\xad\x8e\x70\xb1\xf2\xec\x29\x45\xc6\xf4\x02\xa1\x02\x93\x8e\x5a\x99\x2b\x81\x70\xe9\x94\xc7\x94\x5f\xfd\x8c\x48\x60\xf6\x3e\x47\xc9\xf9\x13\x63\x6c\x92\x1c\x3d\x5d\xad\xb9\x0d\xc3\x0a\x59\x6d\x47\x6e\x75\x51\xfd\x6a\x6b\x27\xa7\xcc\x00\x18\x1a\x2f\x3a\x9a\x1b\xdc\xe6\x1c\xcd\x6d\x56\x12\xe6\x3b\x5c\xb3\xdb\x19\xcb\x0e\xf2\x67\x58\xb4\x51\x74\xce\xfe\x06\x52\x06\x6d\xd2\x51\xc8\x4e\x1a\x34\xa2\x67\x18\x25\x1d\xc5\x00\xda\xe6\xb0\x59\x21\xa2\x7a\x2f\x8e\xcc\x3e\x6d\x66\x68\xec\x8d\xa4\x06\x70\x43\x6a\x00\x47\xa9\x51\x70\x6c\x50\x70\x8c\x72\x94\x24\xd4\xb6\x49\xd1\x49\x18\x65\xc0\x52\xa7\x0d\x96\x96\xde\x99\x8b\x74\xc4\x65\x6e\x70\x58\xca\x30\xd1\x9f\x4d\x81\x5d\xde\x31\x9f\x38\xf9\x2e\x5c\xcf\xa9\xcd\x0d\x59\x62\x65\x24\xb3\xf5\x1b\xbc\x2e\xa3\x6d\x95\x96\x83\x45\x93\xb5\x44\xac\x27\x83\x2c\x71\x1b\xac\xec\x45\xa2\xed\x4d\xe8\x70\x4b\x26\xab\x0c\x3a\x5c\x1b\xbc\xd0\xa3\x35\x02\xf5\xc2\x06\xe3\xae\x9f\x10\x63\x1b\x6e\xb0\xac\xed\x93\x24\x73\x2e\x31\xf1\x33\x5a\x23\x31\x28\x74\xd8\xe0\x59\xb6\x46\x06\xe1\x6e\xd1\xa0\x84\xdb\x60\xbc\xed\x81\x9e\x50\x05\x63\x08\x6f\xb4\x96\x71\xde\x37\x25\x6a\xf3\xd1\x86\x93\x64\x8a\x78\x37\x35\x1e\x1e\xac\x1e\xdb\x60\xe9\xd8\x18\x3d\x63\x54\x6f\x76\x75\x86\x2b\x77\x6b\x15\xeb\xac\x6e\x5e\xe7\x48\x3a\x85\x21\x97\xc3\xe6\x15\x21\x1f\xa4\x23\xd1\xed\xcd\x2b\x86\x3d\xee\x7f\xe9\x00\x0b\x94\x88\x46\x30\x51\x83\x02\x05\xb6\x11\x31\x28\xcd\x69\xc4\x62\xb6\x23\x1d\x5f\x18\xaf\xb8\x98\xed\x01\x93\xad\x26\x65\xd2\x29\x16\x02\x1b\xd9\x46\xfd\xf3\x4d\x05\xb6\x58\x23\x0b\x8b\x72\x48\x37\x48\x90\x0e\x4b\x42\x70\x93\x24\xc1\x6a\x23\x63\x20\xef\x46\x8a\x06\x1f\x8e\x18\x79\x25\x5b\x55\x60\xed\xa0\x91\x57\x0c\x54\x16\xe8\x8d\x1a\x35\xa2\x03\x54\x60\x42\xd8\x58\xad\x46\xae\xf8\xb7\xc8\x31\xf5\x61\xec\x85\xb9\xce\x05\x96\x9e\x98\x48\x93\xc7\xbb\xba\x98\x63\xc7\x11\xcb\x58\x8b\x5d\x8e\x13\x88\xa3\x74\x82\x64\x67\x0b\x94\x0d\x26\x72\xde\x79\x81\xbe\x23\x71\x15\x88\xa7\x60\x05\x18\x34\xe5\x0c\x04\xb4\xa5\x93\x2b\xe7\x19\x16\x9d\xda\xd6\xab\x5e\x61\x79\x52\x89\x69\x5b\xdb\x05\x61\x2c\x76\x89\xf5\x5a\xf6\x4c\x43\xf0\x25\x98\x03\x76\x54\x9e\xa8\x8d\x12\xb5\xb8\x1d\x8d\x42\xa4\x00\x8f\xde\x1a\x34\x87\x4b\x54\x52\x76\x92\x26\x09\x4e\xf4\xca\x0c\xbc\x99\x5d\x62\x9a\xcb\xba\x51\x46\xcf\x5c\xf1\xb2\x42\x7d\x3e\x71\x4f\x66\xb6\x98\x70\x9a\x84\x3b\xd3\x14\xfa\xf6\x79\x4e\xb0\xa0\x3a\x2c\x70\x22\x16\xd0\x24\x7c\x27\x34\x33\xbc\xed\xac\x5e\x20\x1a\x94\x34\xc1\x3a\x08\x19\x6d\x9b\xf2\x15\xc9\xdb\xa4\x70\x80\x5b\x50\x1a\x93\xe4\xc2\x0f\x5b\x0c\x18\xdd\xb1\x49\x8b\x9b\x4f\x48\xac\x6a\x8b\x7e\xe0\xa7\xef\xcc\xe8\x99\xb4\x40\xd0\x4b\xae\x44\x62\x8b\x92\x7c\x3a\x91\xea\xf4\xed\x1a\x2e\xd7\xa4\x68\x25\xe5\x36\x27\x90\x61\xea\xc8\xb6\xa4\x08\x70\x52\x0e\xf7\x2c\xab\x72\x64\x2e\xc4\x6f\xc3\xdc\xcf\xa4\x63\x20\x47\x29\x87\x94\xfd\x64\xb1\x0e\x79\x5b\xe2\x99\xb4\xfa\xd6\x2a\x14\xb8\xdb\x1c\x85\xda\x64\xa7\xa8\x2d\xe1\xb0\xfa\x79\xb2\x9e\xd1\x4d\x5b\xd4\x17\x93\xf5\xef\xdc\x99\x2c\xeb\x17\x04\x19\x01\xbe\xc5\x1c\xe8\x64\xdf\xa5\x4b\xb8\xa8\xc3\xb6\x7c\xc1\x8d\xe2\x0e\x25\x7a\x3c\x93\x53\x23\x3a\x17\x5b\x34\x29\xee\x10\x73\x18\x0f\xdb\x0d\xe1\x3e\x40\xe9\x6d\xdf\x08\x63\x7f\x46\xe5\x71\x68\x18\xa5\xf9\x33\x13\x9d\xf4\xb2\xb3\x0e\xb5\xe9\x16\xd3\x2e\x93\xb3\xe4\x5a\x55\x25\x61\xfc\x24\xbb\x60\x1d\x17\x16\xdf\xae\xf0\x78\x46\xac\xb1\xdd\xee\xaa\x19\x61\xf0\x5a\x91\x72\xb2\x1f\x01\x47\xff\xad\xd9\xc1\xba\xfc\x88\xc2\x50\x6c\xb6\x63\xa9\xc4\x49\xaf\x7c\x10\x26\xb0\x67\xe1\x1b\xde\xb3\x1f\x17\x4b\x1e\x9b\x7e\xc3\x47\x67\x3f\xde\x49\xae\xfa\xdb\x0b\x79\x77\x78\x57\x19\x38\xcc\x6a\xb6\xac\x91\x52\x8f\xaa\x7f\x8c\x2c\x62\x18\xcb\x09\x3f\xc5\xa0\x4c\x62\x8d\x56\x86\x2b\x7e\x21\xa7\xc2\x31\x8f\x89\xab\x35\xa1\xc8\xdb\x99\x2a\xc5\x4c\xa7\x93\x7d\x32\x45\x8d\x1e\x65\x85\xef\x3f\x9d\xec\x99\xcc\x47\xb5\x5c\x22\x36\x30\x82\xb8\x4a\x57\x33\xca\x31\xf1\xef\x2a\x25\x53\xf8\x11\xa5\x0f\xbc\x76\xae\xd2\x6f\x48\x5f\xe8\xb2\x00\xa2\x84\xc6\x9c\xe3\x01\x8f\x8a\x53\xcc\x4d\xaf\xd0\xb9\x71\x6a\x52\xf6\xcf\x58\xd5\x5f\x0c\x10\x83\xdd\x4e\x4d\x24\x1c\x7c\xa8\xb6\x08\x91\xdd\xc8\xea\x14\x99\x8b\x0c\xf0\x70\xab\xc2\xc3\xec\x34\x04\x1d\x2a\xac\xb7\x74\x36\x6a\x19\x82\x64\xa4\x78\x85\x51\x26\x77\xf7\xc0\x93\xb3\x32\x43\x6f\x47\xee\x90\x3e\x63\xe3\xb1\x65\x72\x48\x15\xbe\x3d\x76\x71\x92\x38\x5f\x4c\x5b\xb9\xe8\xbd\x12\x26\x19\x95\xb9\xdb\x6a\x4c\xab\xe8\xda\xfd\xfc\x85\x8b\x2d\x2e\x78\x85\x45\xdc\x5e\x1c\x65\xf2\xaf\x6a\x08\xda\x78\x3d\x7b\x4a\x0f\xf8\x13\x8d\x2f\xb1\x66\xb8\x60\x5e\x90\x87\x80\x35\x7a\x06\x5e\x98\xa0\x46\x92\xdc\xa8\x67\x70\x70\xbc\x1c\xde\x55\xf8\x0a\x86\xc2\xfc\x2b\x0e\x4b\x72\x8f\xd7\x6a\xbc\x27\x9e\x8b\xe1\xd4\xe8\x9a\xf9\x13\x7d\x6e\xb6\x26\xb9\x06\xcf\x3d\x1b\x42\x63\xd3\x2b\xa6\x9a\xbe\xce\x70\x1f\xd4\x30\x72\x8d\x65\xab\xcd\x0c\x49\x33\x44\x2d\x5c\x1f\x2e\xc0\x16\x2b\xb2\xc4\x67\xae\xb8\xa1\x26\x49\x00\x7f\x66\x4e\x6b\x8d\x6f\xfe\xfd\x28\x5c\xa0\x7e\x4c\xbd\x21\xb6\xb8\xb7\x82\x31\x3e\xea\x72\x56\x21\xd7\x29\x94\xd3\x35\x56\xca\x78\xab\xd9\xd6\xd0\x30\x7d\x70\xf8\x55\x82\x03\xa5\xcc\x88\xeb\xb6\x41\xe4\x22\x9d\x54\x83\x49\x4e\x24\xa6\xb5\x4e\xd1\xa6\x78\x18\x14\x5c\xe6\xe3\x50\x6f\x51\xa4\xfb\xe9\x24\xd1\x5c\xa8\x89\x19\xee\xa7\x93\x93\x09\x29\xfc\x38\x60\x90\xd6\x4f\x4e\x0a\x46\x33\xd5\x5b\x6c\x30\x08\x77\xdf\x37\x5e\x52\xd7\xcd\x0c\x53\xf3\xf7\x1f\xa0\xbd\x50\x63\xf6\xeb\x01\x31\xbd\x37\xf4\x38\x04\x41\xde\xbc\xd7\x98\xc1\xf4\x41\x0a\x1d\x4e\xdc\x3a\x52\x12\x23\x3e\x75\x93\x62\xcc\xe7\x41\xfd\xf9\x38\x0c\xfb\x9e\xe3\x4a\x06\x49\x3d\x9f\x43\x4e\x5a\xb4\xee\x3b\xf6\x5b\x56\x7f\x30\xd4\x23\xc9\x01\x12\xab\xfe\x03\xb3\xc4\x3e\x60\xe0\xa0\xc6\xc0\x81\x0f\x4e\x04\x3c\xd4\x75\x53\xe1\xb3\x4d\x1f\x9c\x14\xa3\x4b\x7a\xc1\x16\xcc\xcf\xc8\xe6\xc5\xf6\xd1\x34\x9a\x72\x35\x51\x10\xd1\x74\xd6\x04\x27\xb0\x24\xb4\xc6\x34\x9c\x8f\xd3\x67\xee\x37\xd2\x2f\xa6\xec\x8a\xac\x41\x69\x12\x9d\x0c\xfa\x86\xdd\xe3\xd1\x7d\x17\x6e\x4c\x3a\xd2\x60\xfd\x82\x0b\xf0\xae\x3c\x13\xc1\x23\x61\x59\x7f\xfb\x7c\xd4\x85\xb7\xf0\x15\x23\x24\xfe\x66\xa4\xc3\xb8\xe1\x6c\xb3\x65\xa8\x01\x07\x47\x6a\x6b\xfd\x8d\x1b\xdb\x2b\x5c\xbb\xc0\x28\xe0\x66\x51\xa2\xb4\x0e\x02\x3d\xb6\x66\x86\x31\xd1\x20\xbb\x13\x17\x50\x6b\xd6\x04\xc4\x04\xe0\x16\xdf\xc1\x05\xe9\xb8\x4f\x65\x34\xe8\x4b\x86\x47\x05\x29\x6c\x7c\x8d\xcf\xb7\x82\xfc\xc0\xaa\x87\x03\xbe\x55\x0e\x27\x99\x74\x27\xc1\xd6\xb8\x60\x86\x22\x9c\xe4\xd0\x31\x35\x33\x2b\x02\x2a\x49\x9f\x6e\x35\x28\x86\x82\xe5\xa6\x5a\xce\x90\x3a\x4b\xd3\x09\x07\x1e\x64\xf3\x8c\x5b\x65\xcf\x64\x07\x9e\x71\x07\x9c\xe8\xce\x0e\xa1\x8a\x42\x68\xbb\x37\x15\x56\x82\x06\x27\x8c\x3f\x72\xd1\x28\x94\x2b\xc1\xa9\x61\x20\xf5\xe8\x4d\x95\xad\x08\x77\x97\xf3\xdc\xc1\xac\xf1\xbd\x29\x0d\x8c\x37\xf8\xd2\x3a\xb8\x28\x8f\x1a\xd3\x30\x0d\x3e\x47\x08\x2e\xe2\x9b\xe7\x86\xd4\x77\x3e\x20\xfa\xc1\x89\xa6\xda\x11\xf2\xd6\x9d\x98\x6c\x57\xf3\xba\x58\x83\x32\x8f\x2d\x46\xdb\x77\xf8\x69\x83\x38\x70\x49\x89\xdd\x0a\xfa\x8c\xe6\xf1\x04\x5d\xb4\x5c\x18\x6f\x87\x1f\x33\x89\x46\x1d\xa9\xc8\x7c\x7a\x25\xd4\x99\xcf\x9e\xef\x9e\x57\x04\x0d\xb2\x4f\xee\x9a\x57\x7a\xf6\x89\x34\xf9\x28\x42\x34\xb6\x0d\x82\x3e\xa0\xd8\x61\xf5\xe3\x85\xda\x80\x07\xcc\x20\x5c\x24\xe3\xa6\xef\x31\x7a\x79\x91\x0e\xab\xe2\x0e\xfb\x15\x61\x98\x84\xdb\x1e\x85\xcf\x1d\x0b\xc2\x93\xc4\xef\x3e\xad\x32\x4a\xc6\x91\xad\x08\xdd\x57\x1b\xc2\x32\x26\xce\x1e\x83\xab\x17\xce\x11\xd8\xe3\xe7\x03\x2e\xaa\xc5\xfe\xb2\x79\x4a\x19\x47\xb4\xd3\x1e\xdd\x85\x8b\x72\x41\xdc\x15\xed\x8f\xc8\x79\x6d\x7b\x2c\x7d\xbb\x28\x8f\x39\xb7\x7d\x56\xe3\xc7\x89\x2e\xea\x42\xa0\x3d\x32\x56\x79\xd9\x61\xd1\xcb\xbe\x24\x6e\xfa\xc5\x5e\x25\xa6\x87\xf6\x58\x21\x7b\xf1\x9a\x3c\x77\xdb\xd7\x20\x0d\x2e\xc1\x3a\x47\xfc\xc4\x3d\x8a\x9f\x77\x31\x48\x07\x87\xfc\x65\x45\x20\x4d\xa2\xc9\x2f\xb8\x9d\xef\xe2\x82\x52\xfb\x65\xb6\x4f\x6b\x86\x4a\xfe\xfd\xe9\x32\xae\x2e\x19\x05\xf4\xfb\x89\x7d\x0d\xfa\xb2\xce\x91\x63\x0b\x6a\x0e\x2f\x38\x52\x65\x06\x1c\x69\x56\xac\x70\xa4\x76\x24\x23\x2b\x49\x2a\xe1\x2a\x22\x89\xb2\x1e\xc8\xf7\xb0\xae\xd2\x90\x07\x13\xf8\x01\x85\xab\x22\x1a\x3e\xc3\xc0\xf8\x75\xd2\xf8\xc1\xa5\xc3\x16\x2e\xcc\x35\x38\xd1\xde\xc8\x9b\xc3\x03\x86\x51\x6e\x8c\x70\x7f\xc5\x88\xe0\xcd\xde\xec\x3b\x32\xaf\x25\x84\xe1\x99\x6f\xa9\xbc\xa1\x17\xf7\xc1\xbe\x01\x7a\x43\xbf\x95\xf9\x1e\xc7\xe1\x0d\x9b\xba\x5b\x11\xb4\xc3\x82\x50\x46\xe1\x2a\xbc\xa5\x98\xf6\xfb\x90\xd1\xfb\x93\x92\xa8\x1c\xde\x30\x24\xf1\x41\x06\xf6\x56\x62\x5b\x8c\x0d\xf1\x76\x97\xb9\xff\xf5\xff\xfe\x37\x00\x00\xff\xff\x5c\x06\x57\x46\x46\x52\x00\x00")

func currenciesCurrenciesJsonBytes() ([]byte, error) {
	return bindataRead(
		_currenciesCurrenciesJson,
		"currencies/currencies.json",
	)
}

func currenciesCurrenciesJson() (*asset, error) {
	bytes, err := currenciesCurrenciesJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "currencies/currencies.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"markets/market/bitfinex/currencies.json": marketsMarketBitfinexCurrenciesJson,
	"currencies/currencies.json":              currenciesCurrenciesJson,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"currencies": &bintree{nil, map[string]*bintree{
		"currencies.json": &bintree{currenciesCurrenciesJson, map[string]*bintree{}},
	}},
	"markets": &bintree{nil, map[string]*bintree{
		"market": &bintree{nil, map[string]*bintree{
			"bitfinex": &bintree{nil, map[string]*bintree{
				"currencies.json": &bintree{marketsMarketBitfinexCurrenciesJson, map[string]*bintree{}},
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
